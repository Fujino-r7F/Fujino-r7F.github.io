[{"content":"テーブル名を[]で囲む\nDROP TABLE [test-table];\r","description":"","id":0,"section":"posts","tags":["SQL"],"title":"MicrosoftSQLServerでハイフンを含むテーブルを指定したクエリでエラーになるときの対処法","uri":"https://www.tech-ry.com/posts/mssql_query/"},{"content":"はじめに ブログを始めるに当たってドメイン周りの設定をした際に、DNSに関して理解が足りていないと感じたのでまとめてみました。\nそもそもDNSとは Domain Name Systemの略でドメイン名とIPアドレスを対応づけるしくみのこと\nドメイン名について 私のブログだと下記がドメイン名に当たる www.tech-ry.com\nピリオドで区切られているそれぞれの部分をラベルという 最も右側のラベル(上記の例だとcom)をトップレベルドメインといい、一つ左のドメインを第２レベルドメインという。以下3,4レベルドメインというように続く\n名前解決について ドメイン名→IPアドレスに変換することを名前解決と呼ぶ www.tech-ry.comを例に名前解決について見ていく\n クライアントPCからキャッシュサーバに対して、www.tech-ry.comの問い合わせを行う キャッシュサーバはルートサーバに問い合わせを行う ルートサーバは「comのネームサーバ」に問い合わせるように回答する キャッシュサーバは「comのネームサーバ」に問い合わせる 「comのネームサーバ」はtech-ry.comのネームサーバの情報を回答する キャッシュサーバはtech-ry.comのネームサーバに問い合わせる tech-ry.comのネームサーバはキャッシュサーバにIPアドレスの情報を回答する キャッシュサーバはクライアントPCにIPアドレスの情報を回答する  DNSサーバの種類について キャッシュサーバ DNSキャッシュサーバは「フルサービスリゾルバ」とも呼ばれるサーバで、クライアントPCから送られる名前解決要求を受けて、他のDNSサーバに対して繰り返し問い合わせを行うサーバのこと 名前解決の際に得られた情報はキャッシュとして再利用する\nルートサーバ ルートサーバは名前解決の起点となる「ルートゾーン」を保持するネームサーバのこと ルートゾーンにはトップレベルを管理する各ネームサーバの情報を保持している\nネームサーバ NSリソースレコードによって指定されるサーバーで、権威DNSサーバとも呼ばれる。\nDNSレコードについて DNSの動作のためにはDNSレコードという設定情報が必要になる。\nDNSレコードの種類には下記のようなモノがある\n Aレコード\nドメイン名に対してIPv4のアドレスを回答する AはAddressの頭文字から来てるらしい AAAAレコード\nドメイン名に対してIPv6のアドレスを回答する 32bit(IPv4)→128bit(IPv6)で長さが4倍だからAAAAらしい PTRレコード IPアドレスからホスト名を参照する際に使用されるレコード SOAレコード Start of Authority recordの略で権威DNSサーバが管理するゾーンに関する情報を保存するレコード MXレコード Mail exchangeの略 対象ドメイン宛メールの配送先のメールサーバのホスト名を定義しておくレコード NSレコード Name Serverの略 ドメインに対して、そのドメインを管理する権威サーバの情報を返す CNAMEレコード CNAMEレコードはドメイン名に対する別名を定義するレコード TXTレコード ホスト名に関連づけるテキスト情報を定義するレコード　  ","description":"","id":1,"section":"posts","tags":["DNS"],"title":"DNSに関してまとめてみた","uri":"https://www.tech-ry.com/posts/dns/"},{"content":" プロパティを作成するときに詳細オプションを表示をクリック その後、ユニバーサルアナリティクスプロパティの作成をクリック　後は、そのまま手順に従って作成\n  ","description":"","id":2,"section":"posts","tags":["GA"],"title":"GoogleアナリティクスでUAから始まるトラッキングIDがない時の対処法","uri":"https://www.tech-ry.com/posts/ga-help/"},{"content":"はじめに AWS認定DVA等で良く問われる、Elastic beanstalkのデプロイ方式についてまとめてます。\n各デプロイ方式について  All at once\n同時にすべてのインスタンスに新しいバージョンをデプロイする。  利点\n所要時間が最も短い 注意点\n短時間のダウンタイムが発生する 古いバージョンと新しいバージョンが混在する時間がある   Rolling\nバッチサイズの分だけインスタンスをLBからデタッチして新しいバージョンをデプロイする。 LBに再アタッチした後に、全てのインスタンスの更新が終わるまで繰り返す。  利点\nダウンタイムを回避できる 注意点\nAll at onceに比べてデプロイ時間は長くなる ダウンタイムはないが、デプロイ中インスタンスの台数が減る 古いバージョンと新しいバージョンが混在する時間がある   Rolling with additional batch バッチサイズの分だけインスタンスを追加作成してそのインスタンスに新しいバージョンをデプロイする。 デプロイが通った後に、バッチサイズの分だけLBから既存のインスタンスをデタッチして、デプロイした新規インスタンスをアタッチする。 その後は既存インスタンスにデプロイを繰り返す。 最後に一番初めに追加作成したインスタンスを落とす。  利点\nダウンタイムを回避できる 初めに新規インスタンスを追加作成しているため、デプロイ中でもインスタンスの台数が保たれる 注意点\nRollingに比べてデプロイ時間が長くなる 古いバージョンと新しいバージョンが混在する時間がある   Immutable 新しいインスタンスを1台立ち上げてデプロイする ヘルスチェックが通れば、現在のインスタンス数-1の数だけ新しいインスタンスを立ち上げてデプロイする 全てのヘルスチェックが通った後に、既存のインスタンスを落とす  利点\nダウンタイムを回避できる デプロイが失敗した際に迅速かつ安全にロールバックできる 注意点 Rolling with additonal batchに比べてデプロイ時間が長くなる 古いバージョンと新しいバージョンが混在する時間がある デプロイ中は一時的にインスタンス数が2倍になるため、料金がかかる    ","description":"","id":3,"section":"posts","tags":["AWS","DVA"],"title":"Elastic Beanstalkのデプロイ方法まとめ","uri":"https://www.tech-ry.com/posts/elastic_beanstalk_deploy/"},{"content":"Written in Go, Hugo is an open source static site generator available under the Apache Licence 2.0. Hugo supports TOML, YAML and JSON data file types, Markdown and HTML content files and uses shortcodes to add rich content. Other notable features are taxonomies, multilingual mode, image processing, custom output formats, HTML/CSS/JS minification and support for Sass SCSS workflows.\nHugo makes use of a variety of open source projects including:\n https://github.com/russross/blackfriday https://github.com/alecthomas/chroma https://github.com/muesli/smartcrop https://github.com/spf13/cobra https://github.com/spf13/viper  Hugo is ideal for blogs, corporate websites, creative portfolios, online magazines, single page applications or even a website with thousands of pages.\nHugo is for people who want to hand code their own website without worrying about setting up complicated runtimes, dependencies and databases.\nWebsites built with Hugo are extremelly fast, secure and can be deployed anywhere including, AWS, GitHub Pages, Heroku, Netlify and any other hosting provider.\nLearn more and contribute on GitHub.\n","description":"Hugo, the world’s fastest framework for building websites","id":4,"section":"","tags":null,"title":"About","uri":"https://www.tech-ry.com/about/"}]